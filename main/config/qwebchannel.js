"use strict";var QWebChannelMessageTypes={signal:1,propertyUpdate:2,init:3,idle:4,debug:5,invokeMethod:6,connectToSignal:7,disconnectFromSignal:8,setProperty:9,response:10},QWebChannel=function(e,t){if("object"==typeof e&&"function"==typeof e.send){var a=this;this.transport=e,this.send=function(e){"string"!=typeof e&&(e=JSON.stringify(e)),a.transport.send(e)},this.transport.onmessage=function(e){var n=e.data;switch("string"==typeof n&&(n=JSON.parse(n)),n.type){case QWebChannelMessageTypes.signal:a.handleSignal(n);break;case QWebChannelMessageTypes.response:a.handleResponse(n);break;case QWebChannelMessageTypes.propertyUpdate:a.handlePropertyUpdate(n);break;default:console.error("invalid message received:",e.data)}},this.execCallbacks={},this.execId=0,this.exec=function(e,n){n?(a.execId===Number.MAX_VALUE&&(a.execId=Number.MIN_VALUE),e.hasOwnProperty("id")?console.error("Cannot exec message with property id: "+JSON.stringify(e)):(e.id=a.execId++,a.execCallbacks[e.id]=n,a.send(e))):a.send(e)},this.objects={},this.handleSignal=function(e){var n=a.objects[e.object];n?n.signalEmitted(e.signal,e.args):console.warn("Unhandled signal: "+e.object+"::"+e.signal)},this.handleResponse=function(e){e.hasOwnProperty("id")?(a.execCallbacks[e.id](e.data),delete a.execCallbacks[e.id]):console.error("Invalid response message received: ",JSON.stringify(e))},this.handlePropertyUpdate=function(e){for(var n in e.data){var t=e.data[n],o=a.objects[t.object];o?o.propertyUpdate(t.signals,t.properties):console.warn("Unhandled property update: "+t.object+"::"+t.signal)}a.exec({type:QWebChannelMessageTypes.idle})},this.debug=function(e){a.send({type:QWebChannelMessageTypes.debug,data:e})},a.exec({type:QWebChannelMessageTypes.init},function(e){for(var n in e)new QObject(n,e[n],a);for(var n in a.objects)a.objects[n].unwrapProperties();t&&t(a),a.exec({type:QWebChannelMessageTypes.idle})})}else console.error("The QWebChannel expects a transport object with a send function and onmessage callback property. Given is: transport: "+typeof e+", transport.send: "+typeof e.send)};function QObject(e,n,r){this.__id__=e,(r.objects[e]=this).__objectSignals__={},this.__propertyCache__={};var s=this;function a(e,t){var o=e[0],a=e[1];s[o]={connect:function(e){"function"==typeof e?(s.__objectSignals__[a]=s.__objectSignals__[a]||[],s.__objectSignals__[a].push(e),t||"destroyed"===o||r.exec({type:QWebChannelMessageTypes.connectToSignal,object:s.__id__,signal:a})):console.error("Bad callback given to connect to signal "+o)},disconnect:function(e){if("function"==typeof e){s.__objectSignals__[a]=s.__objectSignals__[a]||[];var n=s.__objectSignals__[a].indexOf(e);-1!==n?(s.__objectSignals__[a].splice(n,1),t||0!==s.__objectSignals__[a].length||r.exec({type:QWebChannelMessageTypes.disconnectFromSignal,object:s.__id__,signal:a})):console.error("Cannot find connection of signal "+o+" to "+e.name)}else console.error("Bad callback given to disconnect from signal "+o)}}}function i(e,n){var t=s.__objectSignals__[e];t&&t.forEach(function(e){e.apply(e,n)})}for(var e in this.unwrapQObject=function(e){if(e instanceof Array){for(var n=new Array(e.length),t=0;t<e.length;++t)n[t]=s.unwrapQObject(e[t]);return n}if(!e||!e["__QObject*__"]||void 0===e.id)return e;var o=e.id;if(r.objects[o])return r.objects[o];if(e.data){var a=new QObject(o,e.data,r);return a.destroyed.connect(function(){if(r.objects[o]===a){delete r.objects[o];var e=[];for(var n in a)e.push(n);for(var t in e)delete a[e[t]]}}),a.unwrapProperties(),a}console.error("Cannot unwrap unknown QObject "+o+" without data.")},this.unwrapProperties=function(){for(var e in s.__propertyCache__)s.__propertyCache__[e]=s.unwrapQObject(s.__propertyCache__[e])},this.propertyUpdate=function(e,n){for(var t in n){var o=n[t];s.__propertyCache__[t]=o}for(var a in e)i(a,e[a])},this.signalEmitted=function(e,n){i(e,n)},n.methods.forEach(function(e){var n=e[0],o=e[1];s[n]=function(){for(var t,e=[],n=0;n<arguments.length;++n)"function"==typeof arguments[n]?t=arguments[n]:e.push(arguments[n]);r.exec({type:QWebChannelMessageTypes.invokeMethod,object:s.__id__,method:o,args:e},function(e){if(void 0!==e){var n=s.unwrapQObject(e);t&&t(n)}})}}),n.properties.forEach(function(e){var n=e[0],t=e[1],o=e[2];s.__propertyCache__[n]=e[3],o&&(1===o[0]&&(o[0]=t+"Changed"),a(o,!0)),Object.defineProperty(s,t,{configurable:!0,get:function(){var e=s.__propertyCache__[n];return void 0===e&&console.warn('Undefined value in property cache for property "'+t+'" in object '+s.__id__),e},set:function(e){void 0!==e?(s.__propertyCache__[n]=e,r.exec({type:QWebChannelMessageTypes.setProperty,object:s.__id__,property:n,value:e})):console.warn("Property setter for "+t+" called with undefined value!")}})}),n.signals.forEach(function(e){a(e,!1)}),n.enums)s[e]=n.enums[e]}"object"==typeof module&&(module.exports={QWebChannel:QWebChannel});